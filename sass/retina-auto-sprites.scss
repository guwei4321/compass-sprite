@import "compass/utilities/sprites";

@mixin media() {
    @media (-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
        @content;
    }
}

@mixin auto-sprites($name, $map, $map-retina: null){
    $url: sprite-url($map);
    $path: sprite-path($map);
    $width: image-width($path);
    $height: image-height($path);

    $url-retina: if($map-retina != null, sprite-url($map-retina), false);

    %image-url {
        background-image: $url;
        @if $url-retina {
            @media (-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-device-pixel-ratio: 1.5), (min-resolution: 144dpi) {
                background-image: $url-retina;
            }
        }
    }
    @each $s in sprite_names($map) {
        .#{$name}-#{$s} {
            @extend %image-url;
            background-repeat: no-repeat;
            background-position: sprite-position($map, $s);
            width: image-width(sprite-file($map, $s));
            height: image-height(sprite-file($map, $s));
        }
    }

    @if $url-retina {
        @include media(){
            @each $s in sprite_names($map) {
                .#{$name}-#{$s} {
                    background-size: $width $height;
                    width: round(image-width(sprite-file($map-retina, $s)) / 2);
                    height: round(image-height(sprite-file($map-retina, $s)) / 2);
                }
            }
        }
    }
}

$some-map: sprite-map("icons/*.png");
$some-map-retina: sprite-map("icons2x/*.png");
@include auto-sprites("icon", $some-map, $some-map-retina);